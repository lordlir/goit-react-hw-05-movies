{"version":3,"file":"static/js/334.775728eb.chunk.js","mappings":"mPA0DA,UApDqB,SAAAA,GAAU,IAAD,IAC5B,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAc,mCAAG,WAAMC,GAAN,iGAEAC,EAAAA,EAAAA,IAAYD,GAFZ,OAEbE,EAFa,OAGnBR,EAASQ,GAHU,gDAKnBC,QAAQC,IAAR,MALmB,qGAAH,sDAcpB,IAJAC,EAAAA,EAAAA,YAAU,WACRN,EAAeF,EAChB,GAAE,CAACA,KAECJ,EAAO,OAAO,KACnB,IAAQa,EAAgCb,EAAhCa,eAAgBC,EAAgBd,EAAhBc,YAGxB,OACE,iCACE,SAAC,KAAD,CAASC,GAAE,oBAAEb,EAASc,aAAX,aAAE,EAAgBC,wBAAlB,QAAsCC,EAAAA,EAAAA,KAAjD,UACE,+BACE,SAAC,MAAD,IADF,eAKDlB,IACC,4BACE,wBAAKa,KACL,gBACEM,IAAG,UAdE,mCAcYL,GACjBM,IAAKP,EACLQ,MAAM,YAKZ,SAAC,KAAD,CAASN,GAAIG,EAAAA,EAAAA,KAAb,mBAEA,SAAC,KAAD,CAASH,GAAIG,EAAAA,EAAAA,QAAb,sBAEA,SAAC,EAAAI,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C,+LCvDKC,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAHc,+BAKP,IAAMC,EAAU,mCAAG,2GAAOC,EAAP,+BAAqB,MAArB,kBAECF,EAAAA,EAAAA,IAAA,0BAA6BE,GAAe,CACjEC,OAAQ,CACNC,QAASL,KAJS,uBAEdf,EAFc,EAEdA,KAFc,kBAOfA,GAPe,gCAStBC,QAAQoB,MAAR,MATsB,yDAAH,qDAaVC,EAAU,mCAAG,WAAMC,GAAN,kGAECP,EAAAA,EAAAA,IAAA,gBAA2B,CAChDG,OAAQ,CACNC,QAASL,EACTS,MAAOD,KALW,uBAEdvB,EAFc,EAEdA,KAFc,kBAQfA,GARe,gCAUtBC,QAAQoB,MAAR,MAVsB,yDAAH,sDAcVtB,EAAW,mCAAG,WAAM0B,GAAN,kGAEAT,EAAAA,EAAAA,IAAA,iBAAoBS,GAAY,CACrDN,OAAQ,CACNC,QAASL,KAJU,uBAEff,EAFe,EAEfA,KAFe,kBAOhBA,GAPgB,gCASvBC,QAAQoB,MAAR,MATuB,yDAAH,sDAaXK,EAAQ,mCAAG,WAAMD,GAAN,kGAEGT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,YAAwC,CAC7DN,OAAQ,CACNC,QAASL,KAJO,uBAEZf,EAFY,EAEZA,KAFY,kBAObA,GAPa,gCASpBC,QAAQoB,MAAR,MAToB,yDAAH,sDAaRM,EAAW,mCAAG,WAAMF,GAAN,kGAEAT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,YAAwC,CAC7DN,OAAQ,CACNC,QAASL,KAJU,uBAEff,EAFe,EAEfA,KAFe,kBAOhBA,GAPgB,gCASvBC,QAAQoB,MAAR,MATuB,yDAAH,qD","sources":["components/pages/MovieDetails.jsx","servisApi/api.js"],"sourcesContent":["import React, { Suspense, useEffect, useState } from 'react';\nimport { NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { dataDetails } from 'servisApi/api';\nimport { BiArrowBack } from 'react-icons/bi';\n\nconst MovieDetails = props => {\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const { movieId } = useParams();\n\n  const getDataDetails = async id => {\n    try {\n      const data = await dataDetails(id);\n      setMovie(data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n    }\n  };\n\n  useEffect(() => {\n    getDataDetails(movieId);\n  }, [movieId]);\n\n  if (!movie) return null;\n  const { original_title, poster_path } = movie;\n  const urlImg = 'https://image.tmdb.org/t/p/w1280';\n\n  return (\n    <>\n      <NavLink to={location.state?.prevLocationPath ?? routes.HOME}>\n        <button>\n          <BiArrowBack />\n          go back\n        </button>\n      </NavLink>\n      {movie && (\n        <div>\n          <h2>{original_title}</h2>\n          <img\n            src={`${urlImg + poster_path}`}\n            alt={original_title}\n            width=\"250\"\n          />\n        </div>\n      )}\n\n      <NavLink to={routes.CAST}>CAST</NavLink>\n\n      <NavLink to={routes.REVIEWS}>REVIEWS</NavLink>\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\nconst BASE_URL = `https://api.themoviedb.org/3`;\nconst KEY_API = 'bcf494ba38cb83576e131fd3ae18b8ee';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const dataMovies = async (time_window = 'day') => {\n  try {\n    const { data } = await axios.get(`/trending/movie/${time_window}`, {\n      params: {\n        api_key: KEY_API,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const dataSearch = async queryValue => {\n  try {\n    const { data } = await axios.get(`/search/movie`, {\n      params: {\n        api_key: KEY_API,\n        query: queryValue,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const dataDetails = async movie_id => {\n  try {\n    const { data } = await axios.get(`/movie/${movie_id}`, {\n      params: {\n        api_key: KEY_API,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const dataCast = async movie_id => {\n  try {\n    const { data } = await axios.get(`/movie/${movie_id}/credits`, {\n      params: {\n        api_key: KEY_API,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const dataReviews = async movie_id => {\n  try {\n    const { data } = await axios.get(`/movie/${movie_id}/reviews`, {\n      params: {\n        api_key: KEY_API,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["props","useState","movie","setMovie","location","useLocation","movieId","useParams","getDataDetails","id","dataDetails","data","console","log","useEffect","original_title","poster_path","to","state","prevLocationPath","routes","src","alt","width","Suspense","fallback","KEY_API","axios","dataMovies","time_window","params","api_key","error","dataSearch","queryValue","query","movie_id","dataCast","dataReviews"],"sourceRoot":""}