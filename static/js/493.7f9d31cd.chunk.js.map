{"version":3,"file":"static/js/493.7f9d31cd.chunk.js","mappings":"uNA+BA,UA3Ba,SAAAA,GACX,OAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACRC,GACD,GAAE,IAEH,IAAMA,EAAY,mCAAG,8GAEEC,EAAAA,EAAAA,MAFF,OAEXC,EAFW,OAGjBJ,EAAaI,EAAKC,SAHD,gDAKjBC,QAAQC,IAAR,MALiB,qGAAH,qDAUlB,OACE,+BACE,iBAAKC,UAAU,MAAf,WACE,2CACCT,EAAUU,OAAS,IAAK,SAAC,IAAD,CAAQC,OAAQX,QAIhD,C,kECLD,IApBe,SAAC,GAAgB,IAAdW,EAAa,EAAbA,OAChB,GAA6BC,EAAAA,EAAAA,MAArBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAGlB,OACE,wBACGH,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,GAAIC,EAAvB,EAAuBA,YAAvB,OACV,yBACE,UAAC,KAAD,CACEC,GAAE,UAAKC,EAAAA,EAAAA,OAAL,YAAsBH,GACxBI,MAAO,CAAEC,iBAAkBT,EAAWC,GAFxC,WAIE,gBAAKS,IAAG,UAVH,kCAUiBL,GAAeM,IAAI,SAASC,MAAM,OACvDT,MANIC,EADC,KAajB,C,+LCrBKS,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAHc,+BAKP,IAAMvB,EAAU,mCAAG,2GAAOwB,EAAP,+BAAqB,MAArB,kBAECD,EAAAA,EAAAA,IAAA,0BAA6BC,GAAe,CACjEC,OAAQ,CACNC,QAASJ,KAJS,uBAEdrB,EAFc,EAEdA,KAFc,kBAOfA,GAPe,gCAStBE,QAAQwB,MAAR,MATsB,yDAAH,qDAaVC,EAAU,mCAAG,WAAMC,GAAN,kGAECN,EAAAA,EAAAA,IAAA,gBAA2B,CAChDE,OAAQ,CACNC,QAASJ,EACTQ,MAAOD,KALW,uBAEd5B,EAFc,EAEdA,KAFc,kBAQfA,GARe,gCAUtBE,QAAQwB,MAAR,MAVsB,yDAAH,sDAcVI,EAAW,mCAAG,WAAMC,GAAN,kGAEAT,EAAAA,EAAAA,IAAA,iBAAoBS,GAAY,CACrDP,OAAQ,CACNC,QAASJ,KAJU,uBAEfrB,EAFe,EAEfA,KAFe,kBAOhBA,GAPgB,gCASvBE,QAAQwB,MAAR,MATuB,yDAAH,sDAaXM,EAAQ,mCAAG,WAAMD,GAAN,kGAEGT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,YAAwC,CAC7DP,OAAQ,CACNC,QAASJ,KAJO,uBAEZrB,EAFY,EAEZA,KAFY,kBAObA,GAPa,gCASpBE,QAAQwB,MAAR,MAToB,yDAAH,sDAaRO,EAAW,mCAAG,WAAMF,GAAN,kGAEAT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,YAAwC,CAC7DP,OAAQ,CACNC,QAASJ,KAJU,uBAEfrB,EAFe,EAEfA,KAFe,kBAOhBA,GAPgB,gCASvBE,QAAQwB,MAAR,MATuB,yDAAH,qD","sources":["components/pages/Home.jsx","components/pages/Movies.jsx","servisApi/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { dataMovies } from 'servisApi/api';\nimport Movies from './Movies';\n\nconst Home = props => {\n  const [moviesTop, setMoviesTop] = useState([]);\n\n  useEffect(() => {\n    getTopMovies();\n  }, []);\n\n  const getTopMovies = async () => {\n    try {\n      const data = await dataMovies();\n      setMoviesTop(data.results);\n    } catch (error) {\n      console.log(error);\n    } finally {\n    }\n  };\n\n  return (\n    <>\n      <div className=\"box\">\n        <h2>Trending today</h2>\n        {moviesTop.length > 0 && <Movies movies={moviesTop} />}\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { routes } from 'routes';\n\nconst Movies = ({ movies }) => {\n  const { pathname, search } = useLocation();\n  const urlImg = 'https://image.tmdb.org/t/p/w300';\n\n  return (\n    <ul>\n      {movies.map(({ original_title, id, poster_path }) => (\n        <li key={id}>\n          <NavLink\n            to={`${routes.MOVIES}/${id}`}\n            state={{ prevLocationPath: pathname + search }}\n          >\n            <img src={`${urlImg + poster_path}`} alt=\"poster\" width=\"50\" />\n            {original_title}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\nconst BASE_URL = `https://api.themoviedb.org/3`;\nconst KEY_API = 'bcf494ba38cb83576e131fd3ae18b8ee';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const dataMovies = async (time_window = 'day') => {\n  try {\n    const { data } = await axios.get(`/trending/movie/${time_window}`, {\n      params: {\n        api_key: KEY_API,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const dataSearch = async queryValue => {\n  try {\n    const { data } = await axios.get(`/search/movie`, {\n      params: {\n        api_key: KEY_API,\n        query: queryValue,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const dataDetails = async movie_id => {\n  try {\n    const { data } = await axios.get(`/movie/${movie_id}`, {\n      params: {\n        api_key: KEY_API,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const dataCast = async movie_id => {\n  try {\n    const { data } = await axios.get(`/movie/${movie_id}/credits`, {\n      params: {\n        api_key: KEY_API,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const dataReviews = async movie_id => {\n  try {\n    const { data } = await axios.get(`/movie/${movie_id}/reviews`, {\n      params: {\n        api_key: KEY_API,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["props","useState","moviesTop","setMoviesTop","useEffect","getTopMovies","dataMovies","data","results","console","log","className","length","movies","useLocation","pathname","search","map","original_title","id","poster_path","to","routes","state","prevLocationPath","src","alt","width","KEY_API","axios","time_window","params","api_key","error","dataSearch","queryValue","query","dataDetails","movie_id","dataCast","dataReviews"],"sourceRoot":""}